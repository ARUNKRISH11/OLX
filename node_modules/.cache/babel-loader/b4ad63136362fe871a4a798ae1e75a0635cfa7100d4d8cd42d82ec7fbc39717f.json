{"ast":null,"code":"var _jsxFileName = \"/home/arunkrish/workspace/Programming/vscode/React challenge/Part 02/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const data = 'hai welcome to the world';\n  return (\n    /*#__PURE__*/\n    // JavaScriptXml for more methods\n    // Return: return one parent element. So we use div there.\n    _jsxDEV(\"div\", {\n      className: \"hello\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          backgroundColor: 'red'\n        },\n        children: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"We're a small group of volunteers that spend their free time maintaining this project, funded by the community. If Babel has benefited you in your work, becoming a contributor or sponsoring might just be a great way to give back!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\n/**\n * Xml Tricks\n * Style in Xml: 3 methods\n * Inline, Style tag, CSS file\n * Style write in objects. So we use '{{ }}': <h2 style={{color:'red'}}>Hello World</h2>\n * Camile Case: backgrountColor\n * Self closing: <br/>\n * In file data accessing: {data}\n * Out file data accessing: import './App.css',    \n * A<div className='hello'>\n */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","data","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arunkrish/workspace/Programming/vscode/React challenge/Part 02/src/App.js"],"sourcesContent":["import './App.css'\nfunction App() {\n  const data = 'hai welcome to the world'\n  return (\n    // JavaScriptXml for more methods\n    // Return: return one parent element. So we use div there.\n    <div className='hello'>\n      <h2 style={{ backgroundColor: 'red' }}>Hello World</h2>\n      <p>\n        We're a small group of volunteers that spend their free time maintaining this project, funded by the community. If Babel has benefited you in your work, becoming a contributor or sponsoring might just be a great way to give back!\n        <br/>\n        {data}\n      </p>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n/**\n * Xml Tricks\n * Style in Xml: 3 methods\n * Inline, Style tag, CSS file\n * Style write in objects. So we use '{{ }}': <h2 style={{color:'red'}}>Hello World</h2>\n * Camile Case: backgrountColor\n * Self closing: <br/>\n * In file data accessing: {data}\n * Out file data accessing: import './App.css',    \n * A<div className='hello'>\n */"],"mappings":";AAAA,OAAO,WAAW;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAClB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,IAAI,GAAG,0BAA0B;EACvC;IAAA;IACE;IACA;IACAF,OAAA;MAAKG,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBJ,OAAA;QAAIK,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAM,CAAE;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDV,OAAA;QAAAI,QAAA,GAAG,uOAED,eAAAJ,OAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACJR,IAAI;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACJV,OAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV;AAACC,EAAA,GAfQV,GAAG;AAiBZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}